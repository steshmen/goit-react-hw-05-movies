{"version":3,"file":"static/js/597.ee990fce.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieCard_container__4KN1P\",\"image\":\"MovieCard_image__ZrmcG\",\"list\":\"MovieCard_list__Sduoj\",\"item\":\"MovieCard_item__c3tx6\",\"title\":\"MovieCard_title__mQEBM\"};","import style from './MovieCard.module.css'\nimport { PropTypes } from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n    const { title, poster_path, vote_average, overview, genres } = movie;\n    \n    return (\n        <div className={style.container}>\n            <img \n                className={style.image} \n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={movie.title} />\n\n            <ul className={style.list}>\n                <li className={style.item}>\n                    <h2 className={style.title}>{title}</h2>\n                    <p>User score: {Math.ceil(vote_average * 10)}%</p>\n                </li>\n\n                <li className={style.item}>\n                    <h3 className={style.title}>Overview</h3>\n                    <p>{overview}</p>\n                </li>\n\n                <li className={style.item}>\n                    <h3 className={style.title}>Genres</h3>\n                    <p>{genres.map(el => el.name).join(', ')}</p>\n                </li>\n            </ul>\n      </div>\n    )\n}\n\nMovieCard.propTypes = {\n    movie: PropTypes.shape({\n        poster_path: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        overview: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n        genres: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string.isRequired\n            }).isRequired\n        ).isRequired\n    }).isRequired\n}\n\nexport default MovieCard;","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetails_link__U+v+7\"};","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport style from './MovieDetails.module.css'\nimport featchApi from 'services/fetchApi';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setLoading(true);\n    featchApi\n      .getMovieById(movieId)\n      .then(data => setMovie(data))\n      .catch(error => setError(error))\n      .finally(setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n      <Link to={backLinkRef.current} className={style.link}>Go back</Link>\n      {loading && <div>Loading...</div>}\n      {error && <div>Error</div>}\n      {movie && <MovieCard movie={movie}/>}\n      </div>\n\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '0d7d20afff25839c3a8a445daa632bca';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst getTrendingMovies = async () => {\n  const resp = await axios(`/trending/all/day?api_key=${API_KEY}`);\n  return resp.data;\n};\n\nconst getMoviesBySearch = async search => {\n  const resp = await axios(\n    `/search/movie?api_key=${API_KEY}&query=${search}&language=en-US&include_adult=false&page=1`);\n  return resp.data;\n};\n\nconst getMovieById = async id => {\n  const resp = await axios(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return resp.data;\n};\n\nconst getMovieReviews = async id => {\n  const resp = await axios(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n  return resp.data;\n}\n\nconst getMovieCast = async id => {\n  const resp = await axios(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n  return resp.data;\n}\n\nconst featchApi = {\n  getMovieById,\n  getTrendingMovies,\n  getMoviesBySearch,\n  getMovieCast,\n  getMovieReviews\n};\n\nexport default featchApi;\n"],"names":["movie","title","poster_path","vote_average","overview","genres","className","style","src","alt","Math","ceil","map","el","name","join","useState","setMovie","loading","setLoading","error","setError","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","featchApi","then","data","catch","finally","to","current","Suspense","fallback","API_KEY","axios","getTrendingMovies","resp","getMoviesBySearch","search","getMovieById","id","getMovieReviews","getMovieCast"],"sourceRoot":""}